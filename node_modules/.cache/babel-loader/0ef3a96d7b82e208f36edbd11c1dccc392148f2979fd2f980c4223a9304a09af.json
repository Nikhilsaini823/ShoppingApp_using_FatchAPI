{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Secureweb\\\\Desktop\\\\reactjs\\\\myapp\\\\src\\\\component\\\\JobProfile\\\\Jobform.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport \"./Jobform.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Jobform = () => {\n  _s();\n  const [finalError, setFinalError] = useState({});\n  const [formData, setFormData] = useState({});\n  const [finalData, setFinalData] = useState([]);\n  const formFields = ['name'\n  // 'email',\n  // 'password', \n  // 'pincode', \n  // 'fulladdress', \n  // 'gender', \n  // 'state', \n  // 'districts'\n  ];\n\n  const handleErrorMessage = e => {\n    if (e.target.value === '') {\n      setFinalError({\n        [e.target.name]: `${e.target.name} Should be required`,\n        ...finalError\n      });\n      for (const key in formData) {\n        if (key === e.target.name) {\n          delete formData[key];\n        } else {\n          setFormData({\n            ...formData\n          });\n        }\n      }\n    } else {\n      for (const key in finalError) {\n        if (key === e.target.name) {\n          delete finalError[key];\n        } else {\n          setFinalError({\n            ...finalError\n          });\n        }\n      }\n      setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const formSubmit = [];\n  const validate = event => {\n    event.preventDefault();\n    finalData.push({\n      formData\n    });\n    // console.log('formData',formSubmit)\n    // setFinalData({...formData})\n    // if (formData && Object.keys(formData).length === formFields.length) { \n    //     console.log('formData',formData)\n    //     // setFinalData({...finalData,})\n    // }\n    // else {\n    //     let finalError = {};\n    //     for (const value of formFields) {\n    //         if (!formData[value]) {\n    //             finalError = { ...finalError, [value]: `${value} Should be required` };\n    //         }\n    //     }\n    //     setFinalError({ ...finalError });\n    // }\n  };\n\n  console.log('finalData', finalData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: validate,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-3\",\n        children: \"Job Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            placeholder: \"name\",\n            onChange: e => {\n              handleErrorMessage(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), finalError.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"msgcolor\",\n            children: finalError.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3 \",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mt-5\",\n        children: \"Final Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table container mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"States\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Districts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Pincode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Fulladdress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Jobform, \"jlRspABVX8KFfOpyxruPldYWZfA=\");\n_c = Jobform;\nexport default Jobform;\nvar _c;\n$RefreshReg$(_c, \"Jobform\");","map":{"version":3,"names":["React","useState","Jobform","finalError","setFinalError","formData","setFormData","finalData","setFinalData","formFields","handleErrorMessage","e","target","value","name","key","formSubmit","validate","event","preventDefault","push","console","log"],"sources":["C:/Users/Secureweb/Desktop/reactjs/myapp/src/component/JobProfile/Jobform.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\";\r\nimport \"./Jobform.css\"\r\n\r\nexport const Jobform = () => {\r\n    const [finalError, setFinalError] = useState({})\r\n    const [formData, setFormData] = useState({});\r\n    const [finalData, setFinalData] = useState([]);\r\n\r\n    const formFields = [\r\n        'name',\r\n        // 'email',\r\n        // 'password', \r\n        // 'pincode', \r\n        // 'fulladdress', \r\n        // 'gender', \r\n        // 'state', \r\n        // 'districts'\r\n    ];\r\n    \r\n\r\n    const handleErrorMessage = (e) => {\r\n        if (e.target.value === '') {\r\n            setFinalError({ [e.target.name]: `${e.target.name} Should be required`, ...finalError });\r\n            for (const key in formData) {\r\n                if (key === e.target.name) {\r\n                    delete formData[key];\r\n                } else {\r\n                    setFormData({ ...formData });  \r\n                }\r\n            }\r\n        } \r\n        else {\r\n            for (const key in finalError) {\r\n                if (key === e.target.name) {\r\n                    delete finalError[key];\r\n                } else {\r\n                    setFinalError({ ...finalError });\r\n                }\r\n            }\r\n            setFormData({ ...formData, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n    const formSubmit = [];\r\n    const validate = (event) => {\r\n        event.preventDefault();\r\n        finalData.push({formData});\r\n        // console.log('formData',formSubmit)\r\n        // setFinalData({...formData})\r\n        // if (formData && Object.keys(formData).length === formFields.length) { \r\n        //     console.log('formData',formData)\r\n        //     // setFinalData({...finalData,})\r\n        // }\r\n        // else {\r\n        //     let finalError = {};\r\n        //     for (const value of formFields) {\r\n        //         if (!formData[value]) {\r\n        //             finalError = { ...finalError, [value]: `${value} Should be required` };\r\n        //         }\r\n        //     }\r\n        //     setFinalError({ ...finalError });\r\n        // }\r\n    }\r\n    console.log('finalData',finalData)\r\n    return (\r\n        <div>\r\n            <form onSubmit={validate} className='container'>\r\n                <h1 className=\"mt-3\">Job Form</h1>\r\n                <div className=\"form-row mt-3\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"text\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name='name' placeholder=\"name\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                        }} />\r\n                        {finalError.name && <p className='msgcolor' >{finalError.name}</p>}\r\n                    </div>\r\n                    {/* <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"text\">Gender</label>\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"radio\" value=\"male\" name=\"gender\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                            }} />\r\n                            <label className=\"radio-button\" htmlFor=\"radio-button\">Male</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"radio\" value=\"female\" name=\"gender\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                            }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"radio-button\">Female</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"gender\" value=\"others\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                            }} />\r\n                            <label className=\"form-check-label\" htmlFor=\"radio-button\">Other</label>\r\n                        </div>\r\n                        {finalError.gender && <p className='msgcolor' >{finalError.gender}</p>}\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"inputEmail4\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\" name='email' placeholder=\"Email\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                        }} />\r\n                        {finalError.email && <p className='msgcolor ' >{finalError.email}</p>}\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"inputPassword4\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name='password' placeholder=\"Password\" onChange={(e) => {handleErrorMessage(e);\r\n                        }} />\r\n                        {finalError.password && <p className='msgcolor' >{finalError.password}</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"inputState\">State</label>\r\n                        <select className=\"form-control\" name='state' onChange={(e) => {handleErrorMessage(e);\r\n                        }}>\r\n                            <option value={\"\"}>Choose...</option>\r\n                            <option value={\"HR\"}>Haryana</option>\r\n                            <option value={\"Other\"}>Other..</option>\r\n                        </select>\r\n                        {finalError.state && <p className='msgcolor' >{finalError.state}</p>}\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label htmlFor=\"inputState\">Districts</label>\r\n                        <select className=\"form-control\" name='districts' onChange={(e) => {handleErrorMessage(e);\r\n                        }} >\r\n                            <option value={\"\"}>Choose...</option>\r\n                            <option value={\"Ambala\"}>Ambala </option>\r\n                            <option value={\"Bhiwani\"}>Bhiwani</option>\r\n                            <option value={\"Faridabad\"}>Faridabad</option>\r\n                            <option value={\"Gurugram\"}>Gurugram</option>\r\n                            <option value={\"Hisar\"}>Hisar</option>\r\n                            <option value={\"Karnal\"}>Karnal</option>\r\n                            <option value={\"Panchkula\"}>Panchkula</option>\r\n                            <option value={\"Panipat\"}>Panipat</option>\r\n                            <option value={\"Sonipat\"}>Sonipat</option>\r\n                            <option value={\"Yamunanagar\"}>Yamunanagar</option>\r\n                            <option value={\"Other\"}>Other..</option>\r\n                        </select>\r\n                        {finalError.districts && <p className='msgcolor' >{finalError.districts}</p>}\r\n                    </div>\r\n                    <div className=\"form-group col-md-4000\">\r\n                        <label htmlFor=\"inputZip\">Pincode</label>\r\n                        <input type=\"text\" className=\"form-control\" name='pincode' placeholder=\"343-456\" onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                        }} />\r\n                        {finalError.pincode && <p className='msgcolor' >{finalError.pincode}</p>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputAddress\">Full Address</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"fulladdress\" placeholder=\"#34 Main St\"onChange={(e) => {\r\n                            handleErrorMessage(e);\r\n                        }} />\r\n                        {finalError.fulladdress && <p className='msgcolor' >{finalError.fulladdress}</p>}\r\n                    </div> */}\r\n                </div>\r\n                <button type=\"submit\"  className=\"btn btn-primary mt-3 \" >Submit</button>\r\n            </form>\r\n            \r\n            <div className='container'>\r\n                <h1 className='mt-5'>Final Table</h1>\r\n                <table className=\"table container mt-3\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th scope='col'>Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Password</th>\r\n                            <th scope=\"col\">Gender</th>\r\n                            <th scope=\"col\">States</th>\r\n                            <th scope=\"col\">Districts</th>\r\n                            <th scope=\"col\">Pincode</th>\r\n                            <th scope=\"col\">Fulladdress</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {/* {finalData.map((final, index) => {\r\n                        console.log('final',final)\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{index +1}</td>\r\n                                <td className='space'>{final.name}</td>\r\n                                <td className='space'>{final.email}</td>\r\n                                <td className='space'>{final.password}</td>\r\n                                <td className='space'>{final.gender}</td>\r\n                                <td className='space'>{final.state}</td>\r\n                                <td className='space'>{final.districts}</td>\r\n                                <td className='space'>{final.pincode}</td>\r\n                                <td className='space'>{final.fulladdress}</td>\r\n                            </tr>\r\n                         );\r\n                        })} */}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jobform;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AAAA;AAEtB,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,UAAU,GAAG,CACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACH;;EAGD,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAC9B,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MACvBT,aAAa,CAAC;QAAE,CAACO,CAAC,CAACC,MAAM,CAACE,IAAI,GAAI,GAAEH,CAAC,CAACC,MAAM,CAACE,IAAK,qBAAoB;QAAE,GAAGX;MAAW,CAAC,CAAC;MACxF,KAAK,MAAMY,GAAG,IAAIV,QAAQ,EAAE;QACxB,IAAIU,GAAG,KAAKJ,CAAC,CAACC,MAAM,CAACE,IAAI,EAAE;UACvB,OAAOT,QAAQ,CAACU,GAAG,CAAC;QACxB,CAAC,MAAM;UACHT,WAAW,CAAC;YAAE,GAAGD;UAAS,CAAC,CAAC;QAChC;MACJ;IACJ,CAAC,MACI;MACD,KAAK,MAAMU,GAAG,IAAIZ,UAAU,EAAE;QAC1B,IAAIY,GAAG,KAAKJ,CAAC,CAACC,MAAM,CAACE,IAAI,EAAE;UACvB,OAAOX,UAAU,CAACY,GAAG,CAAC;QAC1B,CAAC,MAAM;UACHX,aAAa,CAAC;YAAE,GAAGD;UAAW,CAAC,CAAC;QACpC;MACJ;MACAG,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACM,CAAC,CAACC,MAAM,CAACE,IAAI,GAAGH,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC,CAAC;IACjE;EACJ,CAAC;EACD,MAAMG,UAAU,GAAG,EAAE;EACrB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxBA,KAAK,CAACC,cAAc,EAAE;IACtBZ,SAAS,CAACa,IAAI,CAAC;MAACf;IAAQ,CAAC,CAAC;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;;EACDgB,OAAO,CAACC,GAAG,CAAC,WAAW,EAACf,SAAS,CAAC;EAClC,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAEU,QAAS;MAAC,SAAS,EAAC,WAAW;MAAA,wBAC3C;QAAI,SAAS,EAAC,MAAM;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eAClC;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC1B;UAAK,SAAS,EAAC,qBAAqB;UAAA,wBAChC;YAAO,OAAO,EAAC,MAAM;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAQ,eAClC;YAAO,IAAI,EAAC,MAAM;YAAC,SAAS,EAAC,cAAc;YAAC,IAAI,EAAC,MAAM;YAAC,WAAW,EAAC,MAAM;YAAC,QAAQ,EAAGN,CAAC,IAAK;cACxFD,kBAAkB,CAACC,CAAC,CAAC;YACzB;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG,EACJR,UAAU,CAACW,IAAI,iBAAI;YAAG,SAAS,EAAC,UAAU;YAAA,UAAGX,UAAU,CAACW;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MAChE;QAAA;QAAA;QAAA;MAAA,QAiFJ,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAE,SAAS,EAAC,uBAAuB;QAAA,UAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACtE,eAEP;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,MAAM;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAK,eACrC;QAAO,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,uBACI;YAAA,wBACI;cAAA,UAAI;YAAE;cAAA;cAAA;cAAA;YAAA,QAAK,eACX;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAK,eAC1B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAK,eAC7B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAK,eAC3B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAK,eAC3B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAS;cAAA;cAAA;cAAA;YAAA,QAAK,eAC9B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAK,eAC5B;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAW;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QAC/B;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA;UAAA;UAAA;QAAA,QAiBQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAlMYZ,OAAO;AAAA,KAAPA,OAAO;AAoMpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}